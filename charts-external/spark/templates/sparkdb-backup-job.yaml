{{ if .Values.enabled }}{{ if .Values.dbBackupJob }}
#apiVersion: batch/v1
#kind: Job
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: sparkdb-backup
spec:
  schedule: "@daily"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          name: sparkdb-backup
        spec:
          containers:
          - name: ops
            image: orihoch/sk8s-ops:mysql
            resources:
              requests:
                cpu: "0.01"
                memory: "10Mi"
            command:
            - bash
            - "-c"
            - |
              source ~/.bashrc; source switch_environment.sh "${K8S_ENVIRONMENT}"
              mysqldump --host=sparkdb --port=3306 --protocol=tcp --user=root "--password=${MYSQL_ROOT_PASSWORD}" \
                        --all-databases > "dump.sql"
              ls -lah dump.sql
              EXPORT_URL="gs://midburn-db-dumps/sparkdb-${K8S_ENVIRONMENT}-dump-`date +%Y-%m-%d-%H-%M`.sql"
              echo "${EXPORT_URL}"
              ! gsutil cp dump.sql "${EXPORT_URL}" && exit 1
              echo "Great Success!"
              exit 0
            env:
            - name: K8S_ENVIRONMENT
              value: {{ .Values.global.environmentName }}
            - name: OPS_REPO_SLUG
              value: {{ .Values.global.opsRepoSlug }}
            - name: OPS_REPO_BRANCH
              value: {{ .Values.global.opsRepoBranch }}
            - name: MYSQL_ROOT_PASSWORD
              {{ if .Values.rootSecretName }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.rootSecretName | quote }}
                  key: MYSQL_ROOT_PASSWORD
              {{ else }}
              value: "123456"
              {{ end }}
            volumeMounts:
            - name: k8s-ops
              mountPath: /k8s-ops
              readOnly: true
          volumes:
          - name: k8s-ops
            secret:
              secretName: {{ .Values.global.k8sOpsSecretName }}
          restartPolicy: Never
{{ end }}{{ end }}
